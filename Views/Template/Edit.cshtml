@model QuizFormsApp.Models.Template

@{
    ViewData["Title"] = "Edit Template";
    var questionsList = Model.Questions.ToList();
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <strong>Validation Errors:</strong>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<div class="container py-4">
    <h2 class="mb-4 text-primary">Edit Template</h2>

    <!-- ‚úÖ Show success or error messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="AuthorId" />
        <input type="hidden" asp-for="TopicId" />
  



        <div class="mb-3">
            <label class="form-label">Title</label>
            <input asp-for="Title" class="form-control" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

     <div class="mb-3">
    <label asp-for="TopicId" class="form-label">Topic</label>
    <select asp-for="TopicId" asp-items="ViewBag.Topics" class="form-select" required>
        <option value="">-- Select a Topic --</option>
    </select>
    <span asp-validation-for="TopicId" class="text-danger"></span>
</div>


   
        <!-- ‚úÖ Image URL Field -->
        <div class="mb-3">
            <label class="form-label">Image URL</label>
            <input asp-for="ImageUrl" class="form-control" placeholder="Enter Image URL" />
            <span asp-validation-for="ImageUrl" class="text-danger"></span>
        </div>

        <h3 class="mt-4 mb-3 text-secondary">Edit Questions</h3>

        @if (questionsList.Any())
        {
            <ul class="list-group" id="question-list">
                @for (int i = 0; i < questionsList.Count; i++)
                {
                    var question = questionsList[i];

                    <li class="list-group-item d-flex justify-content-between align-items-center" id="question-@question.Id">
                        <span class="fw-bold">@question.Text</span> 

                        <div>
                            <button type="button" class="btn btn-warning btn-sm me-2" onclick="toggleEdit(@i)">
                                ‚úè Edit
                            </button>
                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteQuestion(@question.Id)">
                                üóë Delete
                            </button>
                        </div>
                    </li>

                    <!-- Editable Section (Hidden by Default) -->
                    <div id="edit-section-@i" class="mt-3 border rounded p-3 d-none">
                        <input type="hidden" name="Questions[@i].Id" value="@question.Id" />
                        <input type="hidden" name="Questions[@i].TemplateId" value="@Model.Id" />

                        <div class="mb-3">
                            <label class="form-label">Question Text</label>
                            <input type="text" name="Questions[@i].Text" class="form-control" value="@question.Text" required />
                        </div>


                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea name="Questions[@i].Description" class="form-control">@question.Description</textarea>
                        </div>
    

                        <div class="mb-3">
                            <label class="form-label">Type</label>
                            <select name="Questions[@i].Type" class="form-select">
                                <option value="0" selected="@(question.Type == QuestionType.SingleLineText)">Single-Line Text</option>
                                <option value="1" selected="@(question.Type == QuestionType.MultiLineText)">Multi-Line Text</option>
                                <option value="2" selected="@(question.Type == QuestionType.Integer)">Integer</option>
                                <option value="3" selected="@(question.Type == QuestionType.Checkbox)">Checkbox</option>
                            </select>
                        </div>

                        <div class="mb-3 form-check">
                        <input type="hidden" name="Questions[@i].IsInTable" value="false" />  <!-- Ensures unchecked sends false -->
                        <input type="checkbox" name="Questions[@i].IsInTable" class="form-check-input" value="true" @(question.IsInTable ? "checked" : "") />
                        <label class="form-check-label">Show in Results Table</label>
                            </div>


                        <button type="button" class="btn btn-success btn-sm" onclick="toggleEdit(@i)">
                            ‚úÖ Save
                        </button>
                    </div>
                }
            </ul>
        }
        else
        {
            <p class="text-danger">‚ùå No questions found for this template!</p>
        }

        <button type="submit" class="btn btn-success mt-3">Save Changes</button>
    </form>
</div>

@section Scripts {
   
    <script>

    document.querySelector('form').addEventListener('submit', function(e) {
        console.log("üöÄ Submitting Form Data:", new FormData(this));
    });
        function toggleEdit(index) {
            let editSection = document.getElementById("edit-section-" + index);
            editSection.classList.toggle("d-none");
        }

       function deleteQuestion(questionId) {
    if (!confirm("Are you sure you want to delete this question?")) return;

    fetch(`/Question/Delete/${questionId}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" }
    })
    .then(response => {
        if (response.ok) {
            document.getElementById(`question-${questionId}`).remove();
            alert("‚úÖ Question deleted successfully!");
        } else {
            alert("‚ùå Failed to delete question.");
        }
    })
    .catch(error => {
        console.error("Error deleting question:", error);
        alert("‚ùå Something went wrong.");
    });
}

    </script>
}

<style>
    .list-group-item {
        transition: all 0.3s ease;
    }
    .list-group-item:hover {
        background-color: #f8f9fa;
        transform: translateY(-2px);
    }
    .d-none {
        display: none !important;
    }
</style>

@model QuizFormsApp.Models.UserDashboardViewModel

<h2 class="mb-4">User Dashboard</h2>

<!-- ✅ Alerts -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<!-- ✅ Salesforce Sync Status -->
@if (Model.IsSalesforceSynced)
{
    <div class="alert alert-success">
        <strong>Salesforce Status:</strong> Synced ✅
    </div>
}

<!-- ✅ Actions -->
<div class="d-flex gap-2 my-4">
    <a asp-action="SyncToSalesforceForm" class="btn btn-primary">Sync to Salesforce</a>
    <a asp-action="ViewMySalesforceData" class="btn btn-info">View My Salesforce Data</a>
</div>

<h3 class="mt-5">My Support Tickets</h3>
<div id="ticketsContainer">
    <div class="text-center py-3" id="ticketsLoading">Loading tickets...</div>
</div>
<button id="loadMoreTickets" class="btn btn-secondary mt-3">Load More</button>

<!-- ✅ Dashboard Sections -->
<div class="row g-4 mt-5">
    <!-- Liked Templates -->
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Liked Templates</h5>
            </div>
            <div class="card-body">
                @if (!Model.LikedTemplates.Any())
                {
                    <div class="alert alert-info mb-0">No liked templates yet.</div>
                }
                else
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var template in Model.LikedTemplates)
                        {
                            <li class="list-group-item">
                                <a asp-controller="Template" asp-action="Details" asp-route-id="@template.Id">
                                    @template.Title
                                </a>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>

    <!-- Submitted Forms -->
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">Submitted Forms</h5>
            </div>
            <div class="card-body">
                @if (!Model.SubmittedForms.Any())
                {
                    <div class="alert alert-info mb-0">No submitted forms yet.</div>
                }
                else
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var form in Model.SubmittedForms)
                        {
                            <li class="list-group-item">
                                <a asp-controller="Template" asp-action="Details" asp-route-id="@form.Template.Id">
                                    @form.Template.Title
                                </a>
                                <br />
                                <small class="text-muted">Submitted on @form.CreatedAt.ToString("yyyy-MM-dd")</small>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>

    <!-- Comments -->
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">Comments</h5>
            </div>
            <div class="card-body">
                @if (!Model.Comments.Any())
                {
                    <div class="alert alert-info mb-0">No comments made yet.</div>
                }
                else
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var comment in Model.Comments)
                        {
                            <li class="list-group-item">
                                <strong>@comment.Template.Title:</strong> @comment.Text
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let currentPage = 1;

async function loadTickets() {
    try {
        const response = await fetch(`/api/ticket/my-tickets?page=${currentPage}`);
        const data = await response.json();
        
        console.log('API Response:', data); // For debugging
        
        if (!response.ok) {
            throw new Error(data.error || 'Failed to load tickets');
        }

        const container = document.getElementById('ticketsContainer');
        const loadingMessage = document.getElementById('ticketsLoading');

        if (loadingMessage) loadingMessage.remove();

        if (!data.tickets || data.tickets.length === 0) {
            if (currentPage === 1) {
                container.innerHTML = `<div class="alert alert-info">No support tickets found.</div>`;
            }
            document.getElementById('loadMoreTickets').disabled = true;
            document.getElementById('loadMoreTickets').innerText = "No more tickets";
            return;
        }

        // Clear container on first load
        if (currentPage === 1) {
            container.innerHTML = '';
        }

        data.tickets.forEach(ticket => {
            container.innerHTML += `
                <div class="card mb-2">
                    <div class="card-body">
                        <h5>${ticket.summary}</h5>
                        <p>Status: ${ticket.status}</p>
                        <a href="${ticket.link}" target="_blank">View in Jira</a>
                    </div>
                </div>`;
        });

        currentPage++;

    } catch (error) {
        console.error('❌ Error loading tickets:', error);
        const container = document.getElementById('ticketsContainer');
        container.innerHTML = `<div class="alert alert-danger">Error loading tickets: ${error.message}</div>`;
        document.getElementById('loadMoreTickets').disabled = true;
    }
}

document.getElementById('loadMoreTickets').addEventListener('click', loadTickets);

// Initial load
loadTickets();
</script>
}

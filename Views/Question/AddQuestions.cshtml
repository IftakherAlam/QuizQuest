@model QuizFormsApp.Models.Template

@{
    ViewData["Title"] = "Add Questions to " + Model.Title;
}

<h2>Add Questions to @Model.Title</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorAlert" class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- ✅ Form to Add Questions -->
<form asp-controller="Question" asp-action="AddQuestion" method="post">
    <input type="hidden" name="templateId" value="@Model.Id" />

    <div class="mb-3">
        <label class="form-label">Question Text</label>
        <input type="text" name="text" class="form-control" required />
    </div>

    <div class="mb-3">
        <label class="form-label">Description</label>
        <textarea name="description" class="form-control"></textarea>
    </div>

    <div class="mb-3">
        <label class="form-label">Type</label>
        <select name="type" class="form-select">
            <option value="0">Single-Line Text</option>
            <option value="1">Multi-Line Text</option>
            <option value="2">Integer</option>
            <option value="3">Checkbox</option>
        </select>
    </div>

    <div class="mb-3 form-check">
        <input type="checkbox" name="isInTable" class="form-check-input" />
        <label class="form-check-label">Show in Results Table</label>
    </div>

    <button type="submit" class="btn btn-primary">Add Question</button>
</form>

<hr />

<!-- ✅ Display List of Added Questions -->
<h3>Questions in @Model.Title</h3>
@if (Model.Questions.Any())
{
    <ul class="list-group">
        @foreach (var question in Model.Questions.OrderBy(q => q.OrderIndex))
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>@question.Text (@question.Type)</span>
                
                <div>
                    <!-- ✅ Edit Button (Triggers Modal) -->
                    <button type="button" class="btn btn-warning btn-sm me-2" data-bs-toggle="modal" data-bs-target="#editModal-@question.Id">
                        Edit
                    </button>

                    <!-- ✅ Delete Form -->
                    <form asp-controller="Question" asp-action="DeleteQuestion" method="post" class="d-inline">
                        <input type="hidden" name="questionId" value="@question.Id" />
                        <input type="hidden" name="templateId" value="@Model.Id" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    </form>
                </div>
            </li>

            <!-- ✅ Edit Question Modal -->
            <div class="modal fade" id="editModal-@question.Id" tabindex="-1" aria-labelledby="editModalLabel-@question.Id" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalLabel-@question.Id">Edit Question</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form asp-controller="Question" asp-action="EditQuestion" method="post">
                            <div class="modal-body">
                                <input type="hidden" name="questionId" value="@question.Id" />
                                <input type="hidden" name="templateId" value="@Model.Id" />

                                <div class="mb-3">
                                    <label class="form-label">Question Text</label>
                                    <input type="text" name="text" class="form-control" value="@question.Text" required />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Description</label>
                                    <textarea name="description" class="form-control">@question.Description</textarea>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Type</label>
                                    <select name="type" class="form-select">
                                        <option value="0" selected="@(question.Type == QuestionType.SingleLineText)">Single-Line Text</option>
                                        <option value="1" selected="@(question.Type == QuestionType.MultiLineText)">Multi-Line Text</option>
                                        <option value="2" selected="@(question.Type == QuestionType.Integer)">Integer</option>
                                        <option value="3" selected="@(question.Type == QuestionType.Checkbox)">Checkbox</option>
                                    </select>
                                </div>

                                <div class="mb-3 form-check">
                                    <input type="checkbox" name="isInTable" class="form-check-input" @(question.IsInTable ? "checked" : "") />
                                    <label class="form-check-label">Show in Results Table</label>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-success">Save Changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        }
    </ul>
}
else
{
    <p>No questions added yet.</p>
}


@section Scripts {
    <script>
        // Auto-dismiss success and error messages after 3 seconds
        setTimeout(() => {
            let successAlert = document.getElementById('successAlert');
            let errorAlert = document.getElementById('errorAlert');
            
            if (successAlert) {
                successAlert.classList.remove('show');
                successAlert.classList.add('fade');
                setTimeout(() => successAlert.remove(), 500);
            }
            
            if (errorAlert) {
                errorAlert.classList.remove('show');
                errorAlert.classList.add('fade');
                setTimeout(() => errorAlert.remove(), 500);
            }
        }, 3000);
    </script>
}
